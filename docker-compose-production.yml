version: '3.7'
services:
  pasarela-frontend:
    build:
      context: ./frontend/
      target: 'production-stage'
    image: pasarela-frontend
    container_name: pasarela-frontend
    restart: unless-stopped
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - pasarela-backend
    expose:
      - 8080

  # Backend service
  pasarela-backend:
    container_name: pasarela-backend
    build: ./backend/  # Build the Docker image using the Dockerfile in the current directory
    ports:
      - "8000:8000"  # Forward the container's port 3333 to the host machine's port 3333 for accessing the backend service
    depends_on:
      - pasarela-db
    networks:
      - app-network

  pasarela-db:
    restart: "no"
    image: postgres:12
    container_name: pasarela-db
    ports:
      - 5475:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=daniel
      - POSTGRES_DB=wompi
    volumes:
      - pasarela_postgresql_data_desarrollo:/var/lib/postgresql/data



  webserver:
    image: nginx:latest
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./deploy/nginx_ssl.conf:/etc/nginx/nginx.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt

    depends_on:
      - pasarela-frontend
      - pasarela-backend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email daniel.gomez922@gmail.com --agree-tos --no-eff-email --force-renewal -d pilatotal.com -d www.pilatotal.com

volumes:
  pasarela_postgresql_data_desarrollo:

  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/iid/projects/daniel/pasarela_productos/
      o: bind

networks:
  app-network:
    driver: bridge
